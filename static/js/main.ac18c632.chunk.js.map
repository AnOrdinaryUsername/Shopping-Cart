{"version":3,"sources":["reportWebVitals.ts","components/molecules/ButtonGroup/ButtonGroup.tsx","components/atoms/Anchor.tsx","components/atoms/Button.tsx","components/atoms/NavBar.tsx","components/atoms/NavItem.tsx","components/molecules/ButtonGroup/HeaderButtons.tsx","components/molecules/MainMenu.tsx","components/organisms/Header.tsx","components/pages/About.tsx","components/pages/Home.tsx","components/pages/Stuff.tsx","root/GlobalStyles.jsx","root/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GroupContainer","styled","div","ButtonGroup","children","Anchor","link","props","target","rel","href","StyledButton","button","type","selectVariant","variant","Button","Horizontal","css","StyledUl","ul","StyledOl","ol","Nav","nav","NavBar","list","Error","NavItem","HeaderButtons","onClick","theme","aria-label","icon","faGithub","faSun","faMoon","menuRoutes","route","text","MainMenu","map","item","index","to","root","document","documentElement","initialTheme","storedTheme","localStorage","getItem","mediaQuery","window","matchMedia","matches","setAttribute","setItem","Header","useState","setTheme","useEffect","colorTheme","About","Home","Stuff","GlobalStyles","createGlobalStyle","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac18c632.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst GroupContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  align-items: baseline;\n  justify-content: center;\n  font-size: 2.4rem;\n  column-gap: 1.2rem;\n\n  & a {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    line-height: normal;\n  }\n\n  & > * {\n    padding: 0 1rem;\n  }\n`;\n\ninterface ButtonGroupProps {\n  children: ReactNode;\n}\nconst ButtonGroup = ({ children }: ButtonGroupProps) => {\n  return <GroupContainer>{children}</GroupContainer>;\n};\n\nexport default ButtonGroup;\n","import React, { AnchorHTMLAttributes } from 'react';\n\ninterface AnchorProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  link: string;\n}\n\nconst Anchor = ({ children, link, ...props }: AnchorProps) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={link} {...props}>\n      {children}\n    </a>\n  );\n};\n\nexport default Anchor;\n","import React, { ButtonHTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\nconst selectVariant = (type: string | undefined) => {\n  switch (type) {\n    case 'primary':\n    case 'secondary':\n    case 'tertiary':\n      return `background-color: var(--${type}-button-bg); color: var(--${type}-button-font);`;\n    default:\n      return '';\n  }\n};\n\ninterface VariantProps {\n  variant?: string;\n}\n\nconst StyledButton = styled.button<VariantProps>`\n  ${({ variant }) => selectVariant(variant)};\n\n  align-items: baseline;\n  border-radius: 0.8rem;\n  display: inline-flex;\n  justify-content: center;\n`;\n\nconst Button = ({ children, ...props }: ButtonHTMLAttributes<HTMLButtonElement> & VariantProps) => {\n  return <StyledButton {...props}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import React, { ReactElement, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface NavBarProps {\n  children: ReactNode;\n  type: string;\n}\n\nconst Horizontal = css`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst StyledUl = styled.ul`\n  ${Horizontal}\n`;\n\nconst StyledOl = styled.ol`\n  ${Horizontal}\n`;\n\nconst Nav = styled.nav`\n  width: 30%;\n`;\n\nconst NavBar = ({ children, type }: NavBarProps): ReactElement => {\n  let list = null;\n  switch (type) {\n    case 'ol':\n      list = <StyledOl>{children}</StyledOl>;\n      break;\n    case 'ul':\n      list = <StyledUl>{children}</StyledUl>;\n      break;\n    default:\n      throw new Error(\n        `Unknown type ${type} was passed to NavBar. Only valid ones are 'ol' and 'ul'.`\n      );\n  }\n\n  return <Nav>{list}</Nav>;\n};\n\nexport default NavBar;\n","import React, { ReactNode } from 'react';\n\ninterface NavItemProps {\n  children: ReactNode;\n}\n\nconst NavItem = ({ children }: NavItemProps) => {\n  return <li>{children}</li>;\n};\n\nexport default NavItem;\n","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Anchor, Button } from '../../atoms';\nimport { ButtonGroup } from '../../molecules';\n\ninterface HeaderButtonsProps {\n  onClick: () => void;\n  theme: boolean;\n}\n\nconst HeaderButtons = ({ onClick, theme }: HeaderButtonsProps) => {\n  return (\n    <>\n      <ButtonGroup>\n        <Anchor\n          aria-label=\"View the source code repository\"\n          link=\"https://github.com/AnOrdinaryUsername/Shopping-Cart\"\n        >\n          <FontAwesomeIcon icon={faGithub} />\n        </Anchor>\n        <Button\n          aria-label={theme ? 'Activate dark theme' : 'Activate light theme'}\n          onClick={onClick}\n        >\n          <FontAwesomeIcon icon={theme ? faSun : faMoon} />\n        </Button>\n      </ButtonGroup>\n    </>\n  );\n};\n\nexport default HeaderButtons;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavBar, NavItem } from '../atoms';\n\nconst menuRoutes = [\n  {\n    route: '/',\n    text: 'Home',\n  },\n  {\n    route: '/about',\n    text: 'About',\n  },\n  {\n    route: '/stuff',\n    text: 'Stuff',\n  },\n];\n\nconst MainMenu = () => {\n  return (\n    <NavBar type=\"ul\">\n      {menuRoutes.map((item, index) => {\n        return (\n          <NavItem>\n            <Link to={item.route} key={index}>\n              {item.text}\n            </Link>\n          </NavItem>\n        );\n      })}\n    </NavBar>\n  );\n};\n\nexport default MainMenu;\n","import React, { useEffect, useState } from 'react';\nimport { HeaderButtons, MainMenu } from '../molecules';\n\nconst root = document.documentElement;\n\nconst initialTheme = (() => {\n  // Initial color theme.\n  let theme = 'light';\n  const storedTheme = localStorage.getItem('theme');\n  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n  if (storedTheme) {\n    if (storedTheme === 'dark') {\n      theme = 'dark';\n    }\n  } else if (mediaQuery.matches) {\n    theme = 'dark';\n  }\n\n  if (theme === 'dark') {\n    root.setAttribute('data-theme', 'dark');\n    localStorage.setItem('theme', 'dark');\n    return false;\n  }\n\n  root.setAttribute('data-theme', 'light');\n  localStorage.setItem('theme', 'light');\n  return true;\n})();\n\nconst Header = () => {\n  const [theme, setTheme] = useState(initialTheme);\n\n  const changeTheme = () => {\n    setTheme(!theme);\n  };\n\n  useEffect(() => {\n    const colorTheme = theme ? 'light' : 'dark';\n    root.setAttribute('data-theme', colorTheme);\n    localStorage.setItem('theme', colorTheme);\n  }, [theme]);\n\n  return (\n    <header>\n      <h1>Shopping Cart</h1>\n      <MainMenu />\n      <HeaderButtons onClick={changeTheme} theme={theme} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => {\n  return <div>Woah what an epic shopping site :O</div>;\n};\n\nexport default About;\n","import React from 'react';\n\nconst Home = () => {\n  return <div>We do be in home tho.</div>;\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Stuff = () => {\n  return <div>Sorry I was doing stuff.</div>;\n};\n\nexport default Stuff;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n    /* http://meyerweb.com/eric/tools/css/reset/ \n    v2.0 | 20110126\n    License: none (public domain)\n    */\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n\n    body {\n        line-height: 1;\n    }\n    ol, ul {\n        list-style: none;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    /* ------------ End of CSS Reset ------------ */\n\n    *,\n    *::after,\n    *::before {\n        box-sizing: border-box;\n    }\n\n    @media screen and (prefers-reduced-motion: reduce), (update: slow) {\n        *,\n        *::before,\n        *::after {\n            animation-duration: 0s !important;\n            animation-iteration-count: 1 !important;\n            transition-duration: 0s !important;\n            transition-delay: 0s !important;\n            animation-delay: 0s !important;\n        }\n    }\n\n    *:focus:not(:focus-visible) {\n        outline: none;\n    }\n\n    *:focus-visible {\n        outline: 2px auto red;\n    }\n\n    /* Default is light theme. */\n    :root {\n        --bg-color: hsl(204, 15%, 94%);\n        --font-color: hsl(0, 0%, 25%);\n        --heading-color: hsl(0, 0%, 26%);\n        --card-shadow: 0px 0px 10px hsl(204deg 15% 78%);\n        --win-bg-color: hsl(205, 50%, 34%);\n        --win-font-color: hsl(0, 0%, 96%);\n    }\n\n    [data-theme='dark'] {\n        --bg-color: hsl(232, 20%, 17%);\n        --font-color: hsl(0, 0%, 96%);\n        --heading-color: hsl(0, 0%, 100%);\n        --card-shadow: none;\n        --win-bg-color: hsl(180, 45%, 29%);\n        --win-font-color: hsl(0, 0%, 96%);\n    }\n\n    html {\n        background-color: var(--bg-color);\n        color: var(--font-color);\n        display: flex;\n        font-size: 62.5%;\n        min-height: 100%;\n        transition: color 300ms, background-color 300ms;\n    }\n\n    a {\n        color: inherit;\n        text-decoration: none;\n    }\n\n    body {\n        display: flex;\n        flex: 1;\n        flex-flow: column nowrap;\n        font: 16px/1.65 system-ui, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans,\n            Helvetica Neue, sans-serif;\n        font-size: 1.6em;\n        line-height: 1.65;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    button {\n        appearance: none;\n        background-color: inherit;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: normal;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n\n    em {\n        font-style: italic;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        color: var(--heading-color);\n        line-height: 1.2;\n    }\n\n    header {\n        display: flex;\n        align-items: baseline;\n        justify-content: space-between;\n        width: 100%;\n        max-width: 800px;\n        margin: auto;\n        padding: 2rem 3.2rem;\n    }\n\n    main {\n        flex: 1;\n    }\n\n    small {\n        font-size: smaller;\n    }\n\n    strong {\n        font-weight: bold;\n    }\n\n    #root {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Header } from '../components/organisms';\nimport { About, Home, Stuff } from '../components/pages';\nimport GlobalStyles from './GlobalStyles';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyles />\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/stuff\" component={Stuff} />\n        </Switch>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}